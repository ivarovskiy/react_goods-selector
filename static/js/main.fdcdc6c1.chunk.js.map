{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","id","uuidv4","value","App","state","selectedGoods","addGood","item","setState","clearSelection","removeGood","selectedGood","filter","formatTitle","length","slice","join","this","className","type","onClick","isGoodSelected","includes","buttonCallback","buttonTitle","buttonToRender","imageToRender","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6PASMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,GAAIC,cACJC,MAAOH,MAWII,EAAb,4MACEC,MAAe,CACbC,cAAe,IAFnB,EAKEC,QAAU,SAACC,GACT,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,SAAU,CAAEH,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,OARvD,EAWEE,eAAiB,WACf,EAAKD,SAAS,CAAEH,cAAe,MAZnC,EAeEK,WAAa,SAACC,GACZ,IAAQN,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,SAAS,CAAEH,cAAeA,EAAcO,QAAO,SAAAL,GAAI,OAAIA,IAASI,QAlBzE,EAqBEE,YAAc,WACZ,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,qBACT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcA,EAAcS,OAAS,MA9BpG,4CAkCE,WAAU,IAAD,OACCT,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,2BAEGD,KAAKJ,iBAE6B,IAApCI,KAAKb,MAAMC,cAAcS,OACtB,KAEA,qBAAKI,UAAU,0BAAf,SACE,wBACEC,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAM,EAAKX,kBAHtB,0BASN,oBAAIS,UAAU,YAAd,SAEIrB,EAAgBC,KACd,SAAAC,GACE,IAAMsB,EAAiBhB,EAAciB,SAASvB,EAAKG,OAE7CqB,EAAiBF,EACnB,kBAAM,EAAKX,WAAWX,EAAKG,QAC3B,kBAAM,EAAKI,QAAQP,EAAKG,QAEtBsB,EAAcH,EAChB,cACA,WAEEI,EACJ,wBACEP,UAAU,gBACVC,KAAK,SACLC,QAASG,EAHX,SAKGC,IAICE,EAAa,mBAAe3B,EAAKG,MAApB,QAEnB,OACE,qBAAkBgB,UAAU,YAA5B,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEA,UAAU,eACVS,IAAKD,EACLE,IAAK7B,EAAKG,UAGd,qBAAKgB,UAAU,iBAAf,SACGnB,EAAKG,QAER,qBAAKgB,UAAU,mBAAf,SACGO,MAZI1B,EAAKC,gBAnFhC,GAAyB6B,IAAMC,WC9B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fdcdc6c1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Good {\n  id: string;\n  value: string;\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  id: uuidv4(),\n  value: good,\n}));\n\ninterface State {\n  selectedGoods: string[];\n}\n\ntype Props = {\n\n};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addGood = (item: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState(({ selectedGoods: [...selectedGoods, item] }));\n  };\n\n  clearSelection = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  removeGood = (selectedGood: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: selectedGoods.filter(item => item !== selectedGood) });\n  };\n\n  formatTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return ' No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          Selected good:\n          {this.formatTitle()}\n        </h1>\n        {this.state.selectedGoods.length === 0\n          ? null\n          : (\n            <div className=\"button-render-container\">\n              <button\n                type=\"button\"\n                className=\"button-render-image\"\n                onClick={() => this.clearSelection()}\n              >\n                Remove all\n              </button>\n            </div>\n          )}\n        <ul className=\"goods__ul\">\n          {\n            goodsFromServer.map(\n              good => {\n                const isGoodSelected = selectedGoods.includes(good.value);\n\n                const buttonCallback = isGoodSelected\n                  ? () => this.removeGood(good.value)\n                  : () => this.addGood(good.value);\n\n                const buttonTitle = isGoodSelected\n                  ? 'Remove good'\n                  : 'Add good';\n\n                const buttonToRender = (\n                  <button\n                    className=\"goods__button\"\n                    type=\"button\"\n                    onClick={buttonCallback}\n                  >\n                    {buttonTitle}\n                  </button>\n                );\n\n                const imageToRender = `./images/${good.value}.jpg`;\n\n                return (\n                  <li key={good.id} className=\"goods__li\">\n                    <div className=\"img-container\">\n                      <img\n                        className=\"goods__image\"\n                        src={imageToRender}\n                        alt={good.value}\n                      />\n                    </div>\n                    <div className=\"good-container\">\n                      {good.value}\n                    </div>\n                    <div className=\"button-container\">\n                      {buttonToRender}\n                    </div>\n                  </li>\n                );\n              },\n            )\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}